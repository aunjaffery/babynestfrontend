{"version":3,"sources":["compontents/account/Profile/Address.js"],"names":["Adress","props","_this","Object","_home_aunox_coding_babynest_BabyNest_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","handleAddressChange","event","updatedUser","state","user","target","name","cust_address","house_no","value","console","log","streetAddress","cust_zip","cust_city","setState","handleSubmit","formBody","FormData","country","form","localStorage","getItem","cust_id","jwtDecode","append","submitAddress","msg","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","md","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","ref","Group","as","Row","controlId","Label","column","sm","Control","type","placeholder","cust_name","disabled","onChange","cities","map","city","key","selected","maxlength","cust_phone","substring","style","color","concat","variant","Addressmsg","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","onClick","JSON","stringify","Component"],"mappings":"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","file":"static/js/26.34110de0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Form, Button, Dropdown } from 'react-bootstrap';\nimport jwtDecode from 'jwt-decode'\nimport _ from 'lodash'\nimport cities from '../../../cities'\n\nclass Adress extends Component{\n \n    constructor(props)\n    {\n        super(props);\n\n        this.state ={\n            user:{}, \n            \n            msg:''\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        console.log('PROPS :: ' + JSON.stringify(props));\n        return {\n            user: props.user,\n            Addressmsg: props.Addressmsg,\n            variant: props.variant,\n        }\n    }\n\n    handleAddressChange = (event) => {\n        let updatedUser = this.state.user;\n\n        switch(event.target.name)\n        {\n            case 'house':\n                updatedUser.cust_address.house_no = event.target.value;\n                console.log('House no :: ' + event.target.value);\n            break;\n\n            case 'street':\n                updatedUser.cust_address.streetAddress = event.target.value;\n                console.log('street :: ' + event.target.value);\n            break;\n\n            case 'pincode':\n                updatedUser.cust_zip = event.target.value;\n                console.log('Pincode :: ' + event.target.value);\n            break;\n\n            case 'city':\n                updatedUser.cust_city = event.target.value;\n                console.log('City :: ' + event.target.value);\n            break;\n\n            case 'state':\n                updatedUser.cust_address.state = event.target.value;\n                console.log('State :: ' + event.target.value);\n            break;\n\n        }\n\n        this.setState({\n            user: updatedUser\n        })\n    }\n\n    handleSubmit = (event) => {\n        let formBody = new FormData();\n        let {country} = this.form; \n        if(localStorage.getItem('jwtToken'))\n        {\n            let cust_id = (jwtDecode(localStorage.getItem('jwtToken'))).cust_id;\n            formBody.append('cust_id',cust_id)\n        }\n\n        formBody.append('house_no', this.state.user.cust_address.house_no);\n        formBody.append('address', this.state.user.cust_address.streetAddress);\n        formBody.append('pincode', this.state.user.cust_zip);\n        formBody.append('city', this.state.user.cust_city);\n        formBody.append('state', this.state.user.cust_address.state);\n        formBody.append('country', country.value);\n\n        this.props.submitAddress(formBody);\n    }\n\n    render()\n    {\n\n        return (\n            <div id=\"address\">\n                <div className=\"head\">My Address Book</div>\n                <div className=\"note\">  Add an address for delivery in your address book and make checkout faster </div>\n                <Row className=\"m-0\">\n                    <Col md={7}>\n                        <Form \n                            ref={form => (this.form = form)}>\n                            <Form.Group as={Row} controlId=\"address-name\" className=\"mb-4\">\n                                <Form.Label column sm={3}>\n                                    Name:\n                                </Form.Label>\n                                <Col sm={9}>\n                                    <Form.Control type=\"text\" name=\"address-name\" placeholder={(this.state.user && this.state.user.cust_name) ? this.state.user.cust_name : ''} disabled  />\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"house\" className=\"mb-2\">\n                                <Form.Label column sm={3}>\n                                    Flat/House No./ Building:\n                                </Form.Label>\n                                <Col sm={9}>\n                                    <Form.Control type=\"text\" name=\"house\" \n                                        placeholder={(this.state.user && this.state.user.cust_address && this.state.user.cust_address.house_no) ? this.state.user.cust_address.house_no : ''}\n                                        value={(this.state.user && this.state.user.cust_address && this.state.user.cust_address.house_no) ? this.state.user.cust_address.house_no : ''}\n                                        onChange={this.handleAddressChange} />\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"street\" className=\"mb-2\">\n                                <Form.Label column sm={3}>\n                                    Street Address / Colony:\n                                </Form.Label>\n                                <Col sm={9}>\n                                    <Form.Control type=\"text\" name=\"street\" \n                                        placeholder={(this.state.user && this.state.user.cust_address && this.state.user.cust_address.streetAddress) ? this.state.user.cust_address.streetAddress : ''}\n                                        value={(this.state.user && this.state.user.cust_address && this.state.user.cust_address.streetAddress) ? this.state.user.cust_address.streetAddress : ''}\n                                        onChange={this.handleAddressChange}/>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"pincode\" className=\"mb-4\">\n                                <Form.Label column sm={3}>\n                                    Pincode:\n                                </Form.Label>\n                                <Col sm={9}>\n                                    <Form.Control type=\"text\" name=\"pincode\" \n                                        placeholder={(this.state.user && this.state.user.cust_zip) ? this.state.user.cust_zip : ''}\n                                        value={(this.state.user && this.state.user.cust_zip) ? this.state.user.cust_zip : ''}\n                                        onChange={this.handleAddressChange}/>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"city\" className=\"mb-4\">\n                                <Form.Label column sm={3}>\n                                    City:\n                                </Form.Label>\n                                <Col sm={9}>\n                                <Form.Control as=\"select\" name='city' onChange={this.handleAddressChange}>\n                                    {cities && cities.cities.map((city,key) =>\n                                        {if((this.state.user && this.state.user.cust_city) && this.state.user.cust_city === city)\n                                        {\n                                            return(<option key={key} selected>{this.state.user.cust_city}</option>)\n                                        }\n                                        else\n                                        {\n                                            return(<option key={key}>{city}</option>)    \n                                        }\n                                        }\n                                    )}\n                                </Form.Control>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"state\" className=\"mb-4\">\n                                <Form.Label column sm={3}>\n                                    State:\n                                </Form.Label>\n                                <Col sm={9}>\n                                    <Form.Control type=\"text\" name=\"state\" \n                                        placeholder={(this.state.user && this.state.user.cust_address && this.state.user.cust_address.state) ? this.state.user.cust_address.state : ''}\n                                        value={(this.state.user && this.state.user.cust_address && this.state.user.cust_address.state) ? this.state.user.cust_address.state : ''}\n                                        onChange={this.handleAddressChange}/>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"country\" className=\"mb-4\">\n                                <Form.Label column sm={3}>\n                                    Country:\n                                </Form.Label>\n                                <Col sm={9}>\n                                    <Form.Control type=\"text\" name=\"country\" disabled\n                                        placeholder={(this.state.user && this.state.user.cust_address && this.state.user.cust_address.country) ? this.state.user.cust_address.country : 'Pakistan'}\n                                        value={(this.state.user && this.state.user.cust_address && this.state.user.cust_address.country) ? this.state.user.cust_address.country : 'Pakistan'}\n                                        onChange={this.handleAddressChange}/>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"mobile\">\n                                <Form.Label column sm={3} className=\"pr-0\">\n                                    Mobile No:\n                                </Form.Label>\n                                <Col sm={9} >\n                                    <div className=\"d-flex mb-4 align-items-center\">\n                                        <Form.Control className=\"mobile-prefix\" type=\"tel\" maxlength=\"2\"\n                                            placeholder={(this.state.user && this.state.user.cust_phone) ? this.state.user.cust_phone.substring(0,3): ''}   disabled/>\n                                        <Form.Control className=\"mobile-no\" type=\"tel\" maxlength=\"10\" \n                                            placeholder={(this.state.user && this.state.user.cust_phone) ? this.state.user.cust_phone.substring(3): ''} disabled/>\n                                    </div>\n                                    <p style={{color:`${this.state.variant}`}} >{this.state.Addressmsg}</p>\n                                    <Button className=\"btn-submit\" onClick={this.handleSubmit}>Save</Button>\n                                    {/* <Button className=\"btn-submit btn-cancel\" type=\"submit\">Cancel</Button> */}\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                    <Col md={5}></Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default Adress;\n"],"sourceRoot":""}