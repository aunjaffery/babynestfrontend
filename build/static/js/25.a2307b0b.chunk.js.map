{"version":3,"sources":["compontents/TrackOrderPage.js"],"names":["TrackOrderPage","props","_this","Object","_home_aunox_coding_babynest_BabyNest_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","responseGoogleFailiure","response","console","log","handleSearch","e","preventDefault","getTrackOrder","state","selectValue","data","procache","cookie","selectAll","selectedShortlistId","cartToggle","shortlist","trackToggle","status","type","test","target","value","setState","code","color","_this2","history","user","track_order","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","ref","form","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","md","span","offset","Group","as","Row","controlId","Label","column","sm","Control","placeholder","onChange","handleDropdownChange","name","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","onClick","disabled","keys","length","map","order","order_no","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","hover","react_moment__WEBPACK_IMPORTED_MODULE_12___default","date","order_date","filter","d","toUpperCase","order_details","item","item_name","total_bill","style","getOrderStatus","order_status","Component","withReducer","reducer","connect","dispatch","ownProps","bindActionCreators","Actions"],"mappings":"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","file":"static/js/25.a2307b0b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Col, Row, Form, Table, FormControl } from \"react-bootstrap\";\nimport history from '../history'\nimport Moment from \"react-moment\";\n\n// ... REDUX ...\nimport withReducer from \"../store/withReducer\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { bindActionCreators } from \"redux\";\nimport reducer from \"./store/reducers\";\nimport * as Actions from \"./store/actions\";\n\nclass TrackOrderPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      procache: [],\n      cookie: [],\n      selectAll: false,\n      selectedShortlistId: [],\n      cartToggle: false,\n      shortlist: false,\n      trackToggle: false,\n      status: -1,\n      type: \"null\",\n      selectValue: \"\"\n    };\n  }\n\n  // ... HANDLERS ...   \n\n  responseGoogleFailiure = response => {\n    console.log (response); \n  }\n\n  componentDidMount() {\n  }\n\n  handleDropdownChange(e) {\n\n    const re = /^[0-9-]*$/;\n      if (re.test(e.target.value)) {\n         this.setState({selectValue: e.target.value})\n      }\n  }\n  \n  handleSearch = (e) => {\n    e.preventDefault();\n    this.props.getTrackOrder(this.state.selectValue)\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // console.log('User' + props.user);\n        return{\n          track_order: props.track_order\n        }\n  }\n\n  getOrderStatus(status) {\n    let status_dictionary = [\n      { code: \"Pending\", color: \"grey\" },\n      { code: \"Delivered\", color: \"green\" },\n      { code: \"In Process\", color: \"blue\" },\n      { code: \"Cancelled\", color: \"red\" },\n      { code: \"Dispatched\", color: \"orange\" }\n    ];\n\n    return status_dictionary[status];\n  }\n  render() {\n    let {user} = this.props;\n    let history = this.state.track_order ? this.state.track_order : [];\n\n    return (\n      <>\n        {/* <Header /> */}\n        <section className=\"login-page\">\n          <div className=\"content\">\n            <div className=\"header\">\n              <span>\n                {\" \"}\n                Track Order\n              </span>\n            </div>\n            <div className=\"order-filter page\">\n            <Form ref={form => (this.form = form)}>\n              <Row>\n                <Col md={{ span: 2, offset: 2 }} >\n                  <Form.Group as={Row} controlId=\"fitler\">\n                    <Form.Label column sm={12} className='text-center'>\n                      Search\n                    </Form.Label>\n                  </Form.Group>\n                </Col>\n                <Col md={4}>\n                  <Form.Group as={Row} controlId=\"orderno\">\n                    <Form.Label column sm={2}>\n                      Order No:\n                    </Form.Label>\n                    <Col sm={7}>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder='For example : 88-1568303155468'\n                        onChange={e => {\n                          this.handleDropdownChange(e);\n                        }}\n                        name=\"orderno\"\n                        value={this.state.selectValue}\n                      >\n                        {/* <option value={-1}>Select Order no</option>\n                        {history &&\n                          history.map(order => {\n                            return (\n                              <option value={order.order_no}>\n                                {order.order_no}-\n                                {this.getOrderStatus(order.order_status).code}\n                              </option>\n                            );\n                          })} */}\n                      </Form.Control>\n                    </Col>\n                    <Col sm={3}>\n                        <Button\n                          type='submit'\n                          className='btn-order mt-1'\n                          onClick={this.handleSearch}\n                          disabled={Object.keys(this.state.selectValue).length > 0 ? false : true}\n                        >\n                          Search\n                        </Button>\n                    </Col>\n                  </Form.Group>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n          {history &&\n            history.map(order => {\n              return (\n                <>\n                  {this.state.selectValue === order.order_no ? (\n                    <Row className=\"order-product\">\n                      <div className=\"track-details w-100\">\n                        <Col md={12} className=\"border-bottom order-info\">\n                          <Table hover>\n                            <thead>\n                              <tr>\n                                <th>\n                                  <b>Shiping Date: </b>\n                                </th>\n                                <th>\n                                  <b>Products: </b>\n                                </th>\n                                <th>\n                                  <b>Total: </b>\n                                </th>\n                                <th>\n                                  <b>Status: </b>\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr>\n                                <td>\n                                  <p>\n                                  <Moment date={order.order_date} filter={(d) => d.toUpperCase()}/>\n                                  </p>\n                                </td>\n                                <td>\n                                  {order.order_details.map(item => {\n                                    return <p>{item.item_name} </p>;\n                                  })}\n                                </td>\n                                <td>\n                                  <p>{order.total_bill}</p>\n                                </td>\n                                <td>\n                                  <p style={{color:this.getOrderStatus(order.order_status).color}}>\n                                    {\n                                      this.getOrderStatus(order.order_status)\n                                        .code\n                                    }\n                                  </p>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </Table>\n                        </Col>\n                      </div>\n                    </Row>\n                  ) : (\n                    \"\"\n                  )}\n                </>\n              );\n            })}\n          \n          </div>\n        </section>{\" \"}\n\n        {/* <Footer /> */}\n      </>\n    );\n  }\n}\n  \n  function mapStateToProps(state) {\n  return {\n      track_order: state.track_order.order.track_order\n    };\n  }\n\n  const mapDispatchToProps = (dispatch, ownProps) => {\n    return bindActionCreators(\n      {\n        getTrackOrder: Actions.getTrackOrder\n      },\n      dispatch\n    );\n  };\n\n  export default withReducer(\n    \"track_order\",\n    reducer\n  )(connect(mapStateToProps, mapDispatchToProps)(TrackOrderPage));\n\n"],"sourceRoot":""}