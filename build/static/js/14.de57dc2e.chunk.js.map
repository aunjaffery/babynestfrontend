{"version":3,"sources":["compontents/timer/Timer.js","compontents/OTPPopup.js","services/facebook/AccountKitWeb.js","compontents/account/Profile/Contact.js"],"names":["Timer","props","_this","Object","classCallCheck","this","_super","call","ResetTime","setState","isTimer","duration","moment","minutes","seconds","timeStamp","Date","timer","setInterval","getTime","timeInterval","min","asSeconds","sec","clearInterval","length","countdown","parseInt","state","setActive","resetTimeNull","_this2","prevProps","prevState","resetTime","react_default","a","createElement","class","Component","OTPPopup","handleChangeRemember","remember","handleCodeChange","evt","target","value","keys","verifyOTP","number","location","pathname","handleClose","confirm","cookie","Cookies","date","setTime","set","expires","closeOTP","handleResendOTP","formBody","FormData","append","ResendOTP","isActive","msg","Fragment","Modal","className","show","size","Button","type","onClick","aria-hidden","Body","Row","Col","md","Form","Control","maxlength","name","placeholder","onChange","style","color","concat","otp_variant","fontSize","otp_msg","Timer_Timer","console","log","otpDialog","withReducer","reducer","connect","ownProps","user","auth","dispatch","bindActionCreators","Actions","AccountKitWeb","inited","appId","csrf","version","debug","script","document","src","body","appendChild","initAccountKit","nextProps","nextState","window","AccountKit_OnInteractive","AccountKit","init","Contact","handleContactChange","event","updatedUser","mobile","cust_phone","slice","codeMobile","mobileCode","saveNumberAndPost","submitContact","handleSubmit","cust_id","alert","handlePhoneVerification","e","preventDefault","phoneVerificationResponse","response","childForm","addChild","id","facebook_AccountKitWeb","ref","contactForm","Group","as","controlId","Label","column","sm","cust_email","substring","disabled","mobile_verified","title","alt","variant","Contactmsg","href","assign"],"mappings":"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","file":"static/js/14.de57dc2e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Timer.css'\nimport moment from 'moment'\n\nexport default class Timer extends Component {\n    \n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            countdown : `0`,\n            isTimer: true\n        }\n    }\n\n    componentDidMount() {\n        let duration = moment.duration({\n            'minutes' : 1,\n            'seconds' : 0 \n        })\n\n        let timeStamp = new Date(0, 0, 0, 2, 10, 30)\n        let timeInterval = 1\n\n        let timer = setInterval(() => {\n            timeStamp = new Date(timeStamp.getTime() + timeInterval * 1000);\n\n            duration = moment.duration(duration.asSeconds() - timeInterval, 'seconds');\n            var min = duration.minutes();\n            var sec = duration.seconds();\n\n            // sec -= 1;\n            if (min < 0) return clearInterval(timer);\n            if (min < 10 && min.length !== 2) min = '0' + min;\n            if (sec < 0 && min !== 0) {\n                min -= 1;\n                sec = 59;\n            } else if (sec < 10 && sec.length !== 2) sec = '0' + sec;\n\n            this.setState({\n                countdown: min + ':' + sec,\n                min: min,\n                sec: sec\n            }, () => {\n                if (parseInt(this.state.min) === 0 && parseInt(this.state.sec) === 0)\n                {\n                    clearInterval(timer);\n                    // alert('triggered')\n                    this.setState({\n                        isTimer: false\n                    }, () => {\n                        this.props.setActive()\n                    })\n                }\n            })\n\n            \n        }, 1000)\n\n    }\n\n    ResetTime = () => {\n        this.setState({\n            isTimer: true\n        }, () => {\n            let duration = moment.duration({\n                'minutes' : 1,\n                'seconds' : 0 \n            })\n    \n            let timeStamp = new Date(0, 0, 0, 2, 10, 30)\n            let timeInterval = 1\n    \n            let timer = setInterval(() => {\n                timeStamp = new Date(timeStamp.getTime() + timeInterval * 1000);\n    \n                duration = moment.duration(duration.asSeconds() - timeInterval, 'seconds');\n                var min = duration.minutes();\n                var sec = duration.seconds();\n    \n                // sec -= 1;\n                if (min < 0) return clearInterval(timer);\n                if (min < 10 && min.length !== 2) min = '0' + min;\n                if (sec < 0 && min !== 0) {\n                    min -= 1;\n                    sec = 59;\n                } else if (sec < 10 && sec.length !== 2) sec = '0' + sec;\n    \n                this.setState({\n                    countdown: min + ':' + sec,\n                    min: min,\n                    sec: sec\n                }, () => {\n                    if (parseInt(this.state.min) === 0 && parseInt(this.state.sec) === 0)\n                    {\n                        clearInterval(timer);\n                        // alert('triggered')\n                        this.setState({\n                            isTimer: false\n                        }, () => {\n                            this.props.setActive()\n                            this.props.resetTimeNull()\n                        })\n                    }\n                })\n    \n                \n            }, 1000)\n        })\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.resetTime && prevProps.resetTime !== this.props.resetTime)\n        {\n            this.ResetTime()\n        }\n    }\n    \n    render() {\n        return (\n            <div class={this.state.isTimer ? \"countdown\" : 'countdown timer-off'}>\n                {this.state.countdown}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Modal, Button, Col, Row, Form, FormCheck } from \"react-bootstrap\";\nimport Social from './authorization/social/Social'\nimport LoginForm from './authorization/login/LoginForm'\nimport Timer from './timer/Timer'\n\n// ... REDUX ...\nimport withReducer from \"../store/withReducer\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { bindActionCreators } from \"redux\";\nimport reducer from \"./store/reducers\";\nimport * as Actions from \"./store/actions\";\n\nimport Cookies from 'universal-cookie';\n\nclass OTPPopup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            msg:null,\n            isActive : false,\n            resetTime: null\n        };\n    }\n\n    \n    //... HANDLERS ...\n\n    handleChangeRemember = () => {\n        this.setState({ remember: !this.state.remember });\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        // console.log('User' + props.user);\n        // if(props.user != null)\n        // {\n        //     console.log('msg :: ' + JSON.stringify(props));\n        //     return props.onPopClicked();\n        // }\n        // else if(props.user == null)\n        // {\n          console.log('Number :: ' + props.number)\n            return{\n                msg: props.msg,\n                show: props.otpDialog,\n                otp_msg: props.otp_msg,\n                otp_variant: props.otp_variant\n            }\n        // }\n    }    \n\n    handleCodeChange = (evt) => {\n      if(evt.target.value && Object.keys(evt.target.value).length === 4)\n      {\n        this.props.verifyOTP(evt.target.value, this.props.number, this.props.location && this.props.location.pathname)\n      }\n    }\n\n    handleClose = () => {\n      //eslint-disable-next-line\n      if(confirm(`You would not be able to checkout as guest. You will need to wait for some time. Are you sure you want to go back ?`))\n      {\n        let cookie = new Cookies()\n        let date = new Date()\n        date.setTime(date.getTime() + (300 * 1000)); // for 5 minute...\n        cookie.set('_otp__', '$svhweli42g09028b420kvsdddfsfr321111///@@!#!@dvvD_SDV_E#@f2rr3r23', {expires: date})\n\n        this.props.closeOTP()\n      }\n    }\n\n    handleResendOTP = () => {\n      let formBody = new FormData()\n      formBody.append('number', this.props.number)\n\n      this.props.ResendOTP(formBody)\n      this.setState({\n        resetTime: 1,\n        isActive: false\n      })\n    }\n\n    setActive = () => {\n      this.setState({\n        isActive: true\n      })\n    }\n\n    resetTimeNull = () => {\n      this.setState({\n        resetTime: null\n      })\n    }\n\n  render() {\n    return (\n      <>\n        <Modal\n          className=\"cust-modal login-modal\"\n          show={this.state.show  && this.state.show}\n          // onHide={this.props.closeOTP}\n          size=\"md\"\n        >\n          <div className=\"btn-close\">\n            <Button\n              type=\"button\" \n              className=\"close\"\n              onClick={this.handleClose}\n            >\n              <span aria-hidden=\"true\">×</span>\n              <span className=\"sr-only\">Close</span>\n            </Button>\n          </div>\n\n          <Modal.Body>\n                <Row className=\"m-0\">\n                    <Col md={12}>\n                        <Form className=\"p-4\">\n                            <Form.Control\n                                type=\"text\"\n                                maxlength=\"4\"\n                                name=\"otp\"\n                                placeholder=\"Enter 4 Digit Verification Code*\"\n                                className=\"my-3\"\n                                onChange={this.handleCodeChange}\n                            /> \n                            {/* <Button className=\"\">Login</Button> */}\n                            <p style={{color:`${this.state.otp_variant}`, fontSize:'14px'}} >{this.state.otp_msg}</p>\n                            <Button onClick={this.state.isActive && this.handleResendOTP} className={this.state.isActive ? \"mx-1\" : 'mx-1 resend-btn-off'}>Resend</Button>\n                        </Form>\n                    </Col>\n                </Row>\n                <Row className=\"m-0\">\n                  <Timer setActive={this.setActive} resetTime={this.state.resetTime} resetTimeNull={this.resetTimeNull}/>\n                </Row>\n                \n          </Modal.Body>\n        </Modal>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        user: state.OTPPopup.auth.user,\n        otpDialog: state.OTPPopup.auth.otpDialog,\n        otp_variant: state.OTPPopup.auth.otp_variant,\n        otp_msg: state.OTPPopup.auth.otp_msg\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return bindActionCreators({\n   closeOTP: Actions.closeOTP,\n   verifyOTP: Actions.verifyOTP,\n   ResendOTP: Actions.ResendOTP\n  }, dispatch)\n}\n\nexport default withReducer('OTPPopup', reducer)\n                (\n                    connect(mapStateToProps,mapDispatchToProps)(OTPPopup)\n                )","import React, { Component, PropTypes } from 'react';\n\nclass AccountKitWeb extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inited: false,\n      appId: '',\n      csrf: '',\n      version: '',\n      debug: true,\n    }\n  }\n\n  componentWillMount() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.accountkit.com/en_US/sdk.js\";\n    document.body.appendChild(script);\n  }\n\n  componentDidMount() {\n    this.initAccountKit();\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if(!this.state.inited && nextState.inited) {\n      window.AccountKit_OnInteractive = () => {\n          window.AccountKit.init({\n            appId: nextState.appId,\n            state: nextState.csrf,\n            version: nextState.version,\n            debug: this.state.debug\n        })\n      }\n    }\n  }\n\n  initAccountKit() {\n        this.setState({\n          inited:true,\n          appId: '494340657971708',\n          csrf: 'hahahahhaa',\n          version: 'v1.1'\n        });\n  }\n\n  render() {\n    return null\n  }\n\n}\n\nexport default AccountKitWeb;","import React, { Component } from 'react';\nimport { Row, Col, Form, Button, Dropdown } from 'react-bootstrap';\nimport jwtDecode from 'jwt-decode'\nimport { hostUrl } from '../../store/config';\nimport { UPDATE_CONTACT } from '../../store/actions';\nimport {FACEBOOK_APP_ID} from '../../../config/app-config'\nimport AccountKitWeb from '../../../services/facebook/AccountKitWeb'\n\nimport OTP from '../../OTPPopup'\n\nclass Contact extends Component{\n    constructor(props)\n    {\n        super(props);\n\n        this.state ={\n            user:{},\n            childForm: false,\n            addChild: false,\n            msg:''\n        }\n\n        \n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return {\n            user: props.user,\n            Contactmsg: props.Contactmsg,\n            variant: props.variant,\n        }\n    }\n\n    handleContactChange = (event) =>\n    {\n        // console.log('USer :: ' + this.state.user.cust_phone);\n        let updatedUser = this.state.user;\n        switch(event.target.name)\n        {\n            case 'code':\n                let mobile = this.state.user.cust_phone.slice(3);\n                let codeMobile = event.target.value + mobile;\n                updatedUser.cust_phone = codeMobile;\n                console.log('Code  :: '+ updatedUser.cust_phone);\n            break;\n\n            case 'mobile':\n                let mobileCode = '+92' + event.target.value;\n                updatedUser.cust_phone = mobileCode;\n                console.log('Mobile  :: '+ updatedUser.cust_phone);\n            break;\n\n            default:\n                return \n        }\n\n        this.setState({\n            user:updatedUser\n        })\n    }\n\n    saveNumberAndPost = (formBody) => {\n        this.props.submitContact(formBody);\n    }\n\n    handleSubmit =() => {\n        // window.AccountKit.login('PHONE' , {countryCode: '+92', phoneNumber: this.state.user.cust_phone.substring(3)}, this.phoneVerificationResponse);\n        if(this.state.user.cust_phone && Object.keys(this.state.user.cust_phone).length  === 13)\n        {\n            // alert('Number we got :: ' + this.state.user.cust_phone)\n            let formBody = new FormData()\n            formBody.append('number', this.state.user.cust_phone)\n            this.props.ResendOTP(formBody, 1, this.state.user.cust_id)\n        }\n        else\n        {\n            alert('Please enter complete mobile number in order to verify')\n        }\n    }\n\n    handlePhoneVerification = (e) => {\n        e.preventDefault();\n    }\n\n    phoneVerificationResponse = (response) => {\n\n        // if (response.status === \"PARTIALLY_AUTHENTICATED\") {\n        //     let formBody = new FormData();\n        //     if(localStorage.getItem('jwtToken'))\n        //     {\n        //         let cust_id = (jwtDecode(localStorage.getItem('jwtToken'))).cust_id;\n        //         formBody.append('cust_id',cust_id)\n        //     }\n        //     formBody.append('mobile', this.state.user.cust_phone);\n        //     this.saveNumberAndPost(formBody);   \n        //   }\n        //   else if (response.status === \"NOT_AUTHENTICATED\") {\n        //     this.setState({\n        //         is_verified: true\n        //     });\n        //   }\n        //   else if (response.status === \"BAD_PARAMS\") {\n        //     // handle bad parameters\n        //   }\n\n    }\n\n\n    render()\n    {\n        return (\n            \n            <div id=\"contact\">\n                <AccountKitWeb />\n                <div className=\"head\">My Contact</div>\n                <Row className=\"m-0\">\n                    <Col md={7}>\n                    <Form \n                    ref={contactForm => (this.contactForm = contactForm)}>\n                        <Form.Group as={Row} controlId=\"email\" className=\"mb-4\">\n                            <Form.Label column sm={2}>\n                                Email Id:\n                            </Form.Label>\n                            <Col sm={10}>\n                                <span className=\"reg-email\"> {(this.state.user && this.state.user.cust_email) && this.state.user.cust_email}</span>\n                            </Col>  \n                        </Form.Group>\n                        { <Form.Group as={Row} controlId=\"mobile\">\n                            <Form.Label column sm={2} className=\"pr-0\">\n                                Mobile No:\n                            </Form.Label>\n                            <Col sm={10} >\n                                <div className=\"d-flex mb-4 align-items-center\">\n                                    <Form.Control className=\"mobile-prefix\" type=\"tel\" \n                                                maxlength = \"3\" name = \"code\" \n                                                placeholder = {(this.state.user && this.state.user.cust_phone) ? this.state.user.cust_phone.substring(0,3): ''} \n                                                value = {\"+92\"}\n                                                disabled\n                                                // onChange={this.handleContactChange}\n                                                />\n\n                                    <Form.Control className=\"mobile-no\" type=\"tel\" \n                                                placeholder={(this.state.user && this.state.user.cust_phone) ? this.state.user.cust_phone.substring(3): ''} \n                                                value={(this.state.user && this.state.user.cust_phone) ? this.state.user.cust_phone.substring(3): ''} \n                                                maxlength=\"10\" name=\"mobile\" \n                                                onChange={this.handleContactChange}\n                                    />\n\n                                    {this.state.user && this.state.user.mobile_verified === 'unproved' && <img className=\"error-icon\" title=\"Not Verified\" src=\"/assets/images/error-icon.png\" alt=\"\"/>}\n                                    {this.state.user && this.state.user.mobile_verified === 'verified' && <img className=\"success-icon\" title=\"Not Verified\" src=\"/assets/images/verify-light.png\" alt=\"\"/>}\n                                </div>\n                                <p style={{color:`${this.state.variant}`}} >{this.state.Contactmsg}</p>\n                                <Button className=\"btn-submit mb-4\" onClick={this.handleSubmit}>Verify & Save</Button>\n                                <p className=\"m-0\">\n                                    A One Time Password (OTP) will be sent <br /> to the above mobile number via SMS\n                                </p>\n                            </Col>\n                        </Form.Group>\n                    }\n                    </Form>\n                    </Col>\n                    <Col md={5}>\n                        <b className=\"d-block mb-4\">Why should I verify my Mobile Number?</b>\n                        <p className=\"verify-text\">By verifying your mobile number with us you can now Shop'n'Earn Loyalty Cash at our Babynestboutique.com stores too! To earn Loyalty Cash on store purchases, simply provide your verified mobile number at the time of billing. <br /><a href=\"#a\">T&C Apply</a></p>\n                    </Col>\n                </Row>\n                <OTP number={this.state.user.cust_phone} {...this.props}/>\n            </div>\n        )\n    }\n}\n\n\nexport default Contact;\n"],"sourceRoot":""}