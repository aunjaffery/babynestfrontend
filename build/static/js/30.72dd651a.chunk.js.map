{"version":3,"sources":["compontents/account/Profile/Subscription.js"],"names":["Subscription","props","_this","Object","_home_aunox_coding_babynest_BabyNest_Frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","handleEmailChange","event","updatedUser","state","user","formBody","FormData","localStorage","getItem","append","jwtDecode","cust_id","parseInt","email_subscription","setState","submitSubscription","handleSmsChange","sms_subscription","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","md","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","Group","as","Row","controlId","onChange","Label","column","sm","Control","type","name","checked","class","Pswdmsg","variant","Component"],"mappings":"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","file":"static/js/30.72dd651a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Form, Button, Dropdown } from 'react-bootstrap';\nimport jwtDecode from 'jwt-decode'\nimport _ from 'lodash'\n\nclass Subscription extends Component{\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state={\n            user:null\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return {\n            user: props.user,\n            Pswdmsg: props.Pswdmsg,\n            variant: props.variant,\n        }\n    }\n\n    handleEmailChange = (event) => {\n        let updatedUser = this.state.user;\n\n        let formBody = new FormData();\n        if(localStorage.getItem('jwtToken'))\n        {\n            formBody.append('cust_id', (jwtDecode(localStorage.getItem('jwtToken')).cust_id))\n        }\n\n        if(parseInt(this.state.user.email_subscription) === 1)\n        {\n            updatedUser.email_subscription = 0;\n            formBody.append('value', updatedUser.email_subscription);\n        }\n        else\n        {\n            updatedUser.email_subscription = 1;\n            formBody.append('value', updatedUser.email_subscription);\n        }\n        this.setState({\n            user: updatedUser\n        })\n\n\n        this.props.submitSubscription(formBody, 'email');\n    }\n\n    handleSmsChange = (event) => {\n        let updatedUser = this.state.user;\n\n        let formBody = new FormData();\n        if(localStorage.getItem('jwtToken'))\n        {\n            formBody.append('cust_id', (jwtDecode(localStorage.getItem('jwtToken')).cust_id))\n        }\n\n        if(parseInt(this.state.user.sms_subscription) === 1)\n        {\n            updatedUser.sms_subscription = 0;\n            formBody.append('value', updatedUser.sms_subscription);\n        }\n        else\n        {\n            updatedUser.sms_subscription = 1;\n            formBody.append('value', updatedUser.sms_subscription);\n        }\n\n        this.setState({\n            user: updatedUser\n        })\n\n        this.props.submitSubscription(formBody, 'sms');\n    }\n\n    render()\n    {\n        let user = null;\n        if(this.state.user)\n        user = this.state.user;\n\n        return (\n            <div id=\"subscription\">\n                <div className=\"head\">My Subscription</div>\n                <Row className=\"m-0\">\n                    <Col md={12}>\n                        <Form>\n                            <Form.Group as={Row} controlId=\"offers-email\" className=\"\"  onChange={this.handleEmailChange} >\n                                <Form.Label column sm={5} className=\"\">\n                                    Receive our Top Offer Details Via Email:\n                                </Form.Label>\n                                <Col sm={7}>\n                                    <Form.Label className=\"switch\">\n                                        <Form.Control type=\"checkbox\" name=\"offers-email\" checked={(user && parseInt(user.email_subscription) === 1) ? true: false} />\n                                        <span class=\"slider round\"></span>\n                                    </Form.Label>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"offers-sms\" className=\"\" onChange={this.handleSmsChange}>\n                                <Form.Label column sm={5} className=\"\">\n                                    Receive Top Deals Via Sms:\n                                </Form.Label>\n                                <Col sm={7}>\n                                    <Form.Label className=\"switch\">\n                                        <Form.Control type=\"checkbox\" name=\"offers-sms\" checked={(user && parseInt(user.sms_subscription) === 1) ? true: false}/>\n                                        <span class=\"slider round\"></span>\n                                    </Form.Label>\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default Subscription;\n"],"sourceRoot":""}